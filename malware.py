import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
import joblib

# === Step 1: Load the Dataset ===
dataset_path = "malware.csv"
df = pd.read_csv(dataset_path)

# Inspect the dataset
print("Dataset Head:\n", df.head())
print("Columns:\n", df.columns)

# === Step 2: Preprocessing ===
# Drop the 'Name' column and separate features (X) and labels (y)
X = df.drop(columns=["Malware", "Name"])  # 'Malware' is the target; 'Name' is non-numeric
y = df["Malware"]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Ensure all data is numerical
print(f"Features are numerical: {X_train.dtypes.unique()}")

# === Step 3: Model Training ===
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
print("Classification Report:\n", classification_report(y_test, y_pred))

# === Step 4: Save the Model ===
model_path = "malware_detection_model.pkl"
joblib.dump(model, model_path)
print(f"Model saved to {model_path}")

# === Step 5: Load and Use the Model ===
loaded_model = joblib.load(model_path)
example_features = X_test.iloc[0].values.reshape(1, -1)
prediction = loaded_model.predict(example_features)
print(f"Prediction for example: {prediction}")
